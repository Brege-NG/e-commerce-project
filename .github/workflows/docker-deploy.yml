name: 🔐 Security & Build Pipeline

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: e-commerce-app

jobs:
  build-and-push:
    name: 🐳 Build & Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📋 Generate tags
        id: tags
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          REGISTRY=$(echo "${{ env.REGISTRY }}" | tr '[:upper:]' '[:lower:]')

          if [[ "$BRANCH_NAME" == "master" ]]; then
            DEV_TAGS="$REGISTRY/${{ env.IMAGE_NAME }}:dev-latest"
          else
            CLEAN_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/\//-/g')
            DEV_TAGS="$REGISTRY/${{ env.IMAGE_NAME }}:dev-$CLEAN_BRANCH_NAME,$REGISTRY/${{ env.IMAGE_NAME }}:dev-sha-$SHORT_SHA"
          fi

          echo "dev_tags=$DEV_TAGS" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: 🏗️ Build and push DEV Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.dev_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 📝 Output image info
        run: |
          echo "🐳 Images construites et poussées :"
          echo "Registry: ${{ env.REGISTRY }}"
          echo "Repository: ${{ env.IMAGE_NAME }}"
          echo "DEV Tags: ${{ steps.tags.outputs.dev_tags }}"
          echo "Branch: ${{ steps.tags.outputs.branch_name }}"
          echo "Commit: ${{ steps.tags.outputs.short_sha }}"
